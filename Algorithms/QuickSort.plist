<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>01</key>
	<string>To begin, the entire list is targeted. A number in the list is randomly chosen. This number is called the &quot;pivot&quot;.</string>
	<key>01.1</key>
	<string>This time, for convenience, the middle number is chosen as the pivot.</string>
	<key>01.2</key>
	<string>A left marker is placed on the leftmost number, and a right marker is placed on the right most number of the list.</string>
	<key>02</key>
	<string>The left marker keeps moving to the right until it reaches a number greater than or equal to the pivot number.</string>
	<key>02.1</key>
	<string>In this case, the left marker is already pointed at number &quot;4&quot; which is greater than the pivot &quot;3&quot;, so it stops moving.</string>
	<key>03</key>
	<string>Then, it is the turn for the right marker to move left. </string>
	<key>04</key>
	<string>It also keep moving until it reaches a number less than the pivot number.</string>
	<key>05</key>
	<string>Since the right marker reaches number &quot;2&quot; which is less than the pivot number, it stops moving.</string>
	<key>05.1</key>
	<string>Now, both left and right markers have stopped moving.</string>
	<key>06</key>
	<string>The two numbers, that are pointed by the two markers, are swapped.</string>
	<key>07</key>
	<string>After swapping, the left marker moves to next number to the right, and the right marker moves to next number to the left.</string>
	<key>08</key>
	<string>Larger pieces of latch are brought back and are on the list behind</string>
	<key>09</key>
	<string>Larger pieces of latch are brought back and are on the list behind</string>
	<key>10</key>
	<string>Larger pieces of latch are brought back and are on the list behind</string>
	<key>11</key>
	<string>Continue to get the pivot position and split the array in both the front and back of the pivot position</string>
	<key>12</key>
	<string>Continue to get the pivot position and split the array in both the front and back of the pivot position</string>
	<key>13</key>
	<string>Continue to get the pivot position and split the array in both the front and back of the pivot position</string>
	<key>14</key>
	<string>Elements smaller than or equal to the latch element are moved forward and in the first child list</string>
	<key>15</key>
	<string>Larger pieces of latch are brought back and are on the list behind</string>
	<key>16</key>
	<string>Elements smaller than or equal to the latch element are moved forward and in the first child list</string>
	<key>17</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>18</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>19</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>20</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>21</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>22</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>23</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>24</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>25</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>26</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>27</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>28</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>29</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>30</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>31</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>32</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>33</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>34</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>35</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>36</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>37</key>
	<string>Continue dividing the same until the child lists are of the same length.</string>
	<key>end</key>
	<string></string>
</dict>
</plist>
